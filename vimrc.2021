let $VIRTUAL_ENV = $CONDA_PREFIX

set encoding=UTF-8
set nu
highlight LineNr ctermfg=DarkGrey gui=none
"colorscheme desert
"set paste
syntax on
set cursorline
highlight clear CursorLine
"highlight CursorLineNR ctermbg=red
hi CursorLineNr ctermfg=yellow gui=none

set tabstop=4
set smartindent
set foldmethod=indent
set backspace=indent,eol,start

inoremap <C-i> <esc>
inoremap <C-w> <C-w>w
" noremap means map keys for normal mode, no recursion
nnoremap <Tab> gt
nnoremap <C-n> :NERDTreeToggle<CR>
nnoremap <C-w> <C-w>w
nnoremap tb :tabnew<Space>
" by defualt, now '\t' will to a new tab for the definition
nnoremap <Leader>t :tab<Space>split<CR>:call<Space>jedi#goto_assignments()<CR>
" imap means map keys for insert mode, with recursion

inoremap <C-l> <End>
inoremap <C-h> <Home>
nnoremap <C-l> <End>
nnoremap <C-h> <Home>


set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.vim/bundle/')
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo

Plugin 'tpope/vim-fugitive'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'preservim/nerdtree'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'davidhalter/jedi-vim'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'ryanoasis/vim-devicons'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"set list lcs=tab:\|\
set t_Co=256
let g:airline#extensions#tabline#enabled = 1
"let g:airline_theme="solarized"
let g:airline_powerline_fonts = 0
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''

" If above setting had display errors, try the unicode symbols
" let g:airline_left_sep = '»'
" let g:airline_left_sep = '▶'
" let g:airline_right_sep = '«'
" let g:airline_right_sep = '◀'
" let g:airline_symbols.linenr = '␊'
" let g:airline_symbols.linenr = '␤'
" let g:airline_symbols.linenr = '¶'
" let g:airline_symbols.branch = '⎇'
" let g:airline_symbols.paste = 'ρ'
" let g:airline_symbols.paste = 'Þ'
" let g:airline_symbols.paste = '∥'
" let g:airline_symbols.whitespace = 'Ξ'


let g:jedi#force_py_version = 3
"let g:jedi#environment_path="/Users/gus/anaconda3/envs/torch/bin/python"
let g:jedi#completions_command = "<C-N>"
let g:jedi#popup_on_dot = 0


autocmd FileType python setlocal completeopt-=preview

" 'Yggdroot/indentLine'
"let g:indentLine_defaultGroup = 'SpecialKey'
"let g:indentLine_char_list = ''
"let g:indentLine_setColors = 0


let NERDTreeDirArrows=1
let NERDTreeMinimalUI=1
let g:NERDTreeDirArrowExpandable = '|'
let g:NERDTreeDirArrowCollapsible = '<'
autocmd BufEnter * if 0 == len(filter(range(1, winnr('$')), 'empty(getbufvar(winbufnr(v:val), "&bt"))')) | qa! | endif


let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_no_default_key_mappings = 1

let g:conceallevel=3
let g:WebDevIconsOS = 'Darwin'
let g:webdevicons_enable_nerdtree = 1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
let g:WebDevIconsNerdTreeBeforeGlyphPadding = ''
